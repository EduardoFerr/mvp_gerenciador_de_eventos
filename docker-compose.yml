services:
  db:
    image: postgres:16-alpine
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: event_management_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d event_management_db"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    restart: always
    ports:
      - "3001:3001"
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/event_management_db?schema=public
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your_jwt_secret_key
      NODE_ENV: production
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["/bin/sh", "-c", "npx prisma migrate deploy && npm run start"]

  frontend:
    build: ./frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
    depends_on:
      backend:
        condition: service_started

volumes:
  db-data:
  redis-data:
